@charset "UTF-8";

@layer global, main, elements, important;

@import url("./global.css") layer(global);

@layer important {
	:root.no-transitions * {
		transition: none;
		animation: none;
	}

	[hidden] {
		display: none;
	}

	@media print {
		:root {
			background: none;
			--chroma: 2.5%;
		}

		body {
			display: block;
			block-size: unset;
			overflow: unset;
			overscroll-behavior: unset;
			/* padding-inline: 2rem; */
		}

		main {
			display: block;
			overflow: unset;
			background: none;
		}

		c-header, dialog {
			display: none;
		}
	}

	@page {
		margin: 0px;
	}
}

@layer main {
	@media not print {
		:root:not(.light-theme) {
			color-scheme: dark only;

			--color: #ffffff;
			--hue: 290.4deg;
			--chroma: 4%;
			--background-lightness: 20%;
			--gray-lightness-step: 9%;
			--shadow-color: #0005;
			--item-shadow-color: #0004;

			--accent-hue: 277deg;
			--accent-chroma: 57%;
			--accent-lightness: 48%;

			--highlight-code-background: var(--gray-1);
			/* --highlight-heading: oklch(calc(var(--accent-lightness) + 30%) var(--accent-chroma) var(--accent-hue)); */
			/* --highlight-math: palegreen; */
			--highlight-heading: palegreen;
			--highlight-math: oklch(calc(var(--accent-lightness) + 35%) var(--accent-chroma) var(--accent-hue));
		}
	}

	:root {
		color-scheme: light only;

		--color: black;
		--hue: 290.4deg;
		--chroma: 2.5%;
		--background-lightness: 100%;
		--gray-lightness-step: -5%;
		--shadow-color: var(--transparent-gray-3);
		--item-shadow-color: transparent;

		--accent-hue: 277deg;
		--accent-lightness: 60%;
		--accent-chroma: 62%;

		--highlight-heading: blue;
		--highlight-math: #0a0;
		--highlight-code-background: var(--gray-1);

		--highlight-math: blue;
		--highlight-heading: #090;
	}

	:root {
		--background: oklch(var(--background-lightness) var(--chroma) var(--hue));
		--gray-1: oklch(calc(var(--background-lightness) + 1 * var(--gray-lightness-step)) var(--chroma) var(--hue));
		--gray-2: oklch(calc(var(--background-lightness) + 2 * var(--gray-lightness-step)) var(--chroma) var(--hue));
		--gray-3: oklch(calc(var(--background-lightness) + 3 * var(--gray-lightness-step)) var(--chroma) var(--hue));
		--gray-4: oklch(calc(var(--background-lightness) + 4 * var(--gray-lightness-step)) var(--chroma) var(--hue));
		--gray-5: oklch(calc(var(--background-lightness) + 5 * var(--gray-lightness-step)) var(--chroma) var(--hue));
		--transparent-background: oklch(calc(var(--background-lightness) + 2 * var(--gray-lightness-step)) var(--chroma) var(--hue) / 30%);
		--transparent-gray-1: oklch(calc(var(--background-lightness) + 4 * var(--gray-lightness-step)) var(--chroma) var(--hue) / 30%);
		--transparent-gray-2: oklch(calc(var(--background-lightness) + 6 * var(--gray-lightness-step)) var(--chroma) var(--hue) / 30%);
		--transparent-gray-3: oklch(calc(var(--background-lightness) + 8 * var(--gray-lightness-step)) var(--chroma) var(--hue) / 30%);

		--titlebar-area-inline-start: env(titlebar-area-x, 0px);
		--titlebar-area-inline-size: env(titlebar-area-width, 0px);
		--titlebar-area-inline-end: calc(100dvi - var(--titlebar-area-inline-start) - var(--titlebar-area-inline-size));
		--titlebar-area-block-start: env(titlebar-area-y, 0px);
		--titlebar-area-block-size: env(titlebar-area-height, 0px);
		--titlebar-area-block-end: calc(100dvb - var(--titlebar-area-block-start) - var(--titlebar-area-block-size));

		--safe-area-inline-start: env(safe-area-inset-left, 0px);
		--safe-area-inline-end: env(safe-area-inset-right, 0px);
		--safe-area-block-start: env(safe-area-inset-top, 0px);
		--safe-area-block-end: env(safe-area-inset-bottom, 0px);

		--px: calc(1rem / 16);

		--scrollbar-color: oklch(var(--accent-lightness) var(--accent-chroma) var(--accent-hue));
		--scrollbar-hover-color: oklch(calc(var(--accent-lightness) + 10%) var(--accent-chroma) var(--accent-hue));

		--document-font: "Computer Modern Serif", "Noto Serif", ui-serif, serif;

		font-family: system-ui, sans-serif;
		font-size-adjust: cap-height from-font;
		background-color: var(--gray-1);
		color: var(--color);
		overflow-wrap: break-word;
		line-height: 1.5;
		-webkit-text-size-adjust: none;
		text-size-adjust: none;
		-webkit-tap-highlight-color: transparent;
		overscroll-behavior: none;
		touch-action: manipulation;

		@media (hover) {
			@supports not selector(::-webkit-scrollbar) {
				scrollbar-color: var(--scrollbar-color) transparent;
			}
		}

		@media not (hover) {
			scrollbar-color: var(--transparent-gray-1) transparent;
		}

		&.translated-rtl {
			direction: rtl;
			--titlebar-area-inline-start: calc(100dvi - env(titlebar-area-x, 0px) - env(titlebar-area-width, 0px));
			--titlebar-area-inline-end: env(titlebar-area-x, 0px);
			--safe-area-inline-start: env(safe-area-inset-right, 0px);
			--safe-area-inline-end: env(safe-area-inset-left, 0px);
		}
	}

	body {
		box-sizing: border-box;
		margin: 0;
		block-size: 100dvb;
		display: flex;
		flex-direction: column;
		overscroll-behavior: none;

		:root:active-view-transition-type(page-navigation) & {
			view-transition-name: pamm-body;
		}
	}

	:root {
		-webkit-print-color-adjust: exact;
		print-color-adjust: exact;

		--page-size-A4-width: 210mm;
		--page-size-A4-height: 297mm;

		--page-width: var(--page-size-A4-width);
		--page-height: var(--page-size-A4-height);
	}

	main {
		flex-grow: 1;
		flex-basis: 0;
		display: flex;
		flex-direction: column;
		overflow: hidden;
		box-sizing: border-box;
		background-color: var(--background);
		/* padding-inline-start: var(--safe-area-inline-start); */
		/* padding-inline-end: var(--safe-area-inline-end); */
	}

	:root:is([data-transition=toggling-view]) main {
		view-transition-name: main-content;
	}


	dialog {
		transition: opacity, display, translate, scale, overlay, --blur-radius;
		transition-duration: .15s;
		transition-behavior: allow-discrete;
		transition-timing-function: ease-out;
		--blur-radius: .3rem;
		background-color: transparent;

		&::backdrop {
			transition: background-color;
			transition-duration: inherit;
			--backdrop-filter: blur(var(--blur-radius));
			-webkit-backdrop-filter: var(--backdrop-filter);
			backdrop-filter: var(--backdrop-filter);
			background-color: #0003;
		}

		@starting-style {
			opacity: 0%;
			scale: 50%;
			--blur-radius: 0rem;

			&::backdrop {
				background-color: transparent;
			}
		}
		
		&:not(:modal) {
			display: none;
			opacity: 0%;
			scale: 50%;
			--blur-radius: 0rem;

			&::backdrop {
				background-color: transparent;
			}
		}
	}

	dialog.messagebox {
		max-inline-size: calc(min(100% - 6rem, 40rem));
		border-radius: .5rem;
		background-color: var(--gray-2);
		background-color: light-dark(var(--gray-1), var(--gray-2));
		box-shadow: 0 0 3rem var(--shadow-color);

		& > form {
			display: flex;
			flex-direction: column;
			gap: .6rem;
			padding: .8rem 1rem;
		}

		& .message {
			white-space: pre-wrap;
		}

		& .input {
			border: 2px solid royalBlue;
			padding: .4em .6em;
			border-radius: .3rem;

			&:focus-visible {
				outline: none;
				background-color: var(--gray-1);
			}
		}

		& .buttons {
			display: flex;
			gap: .5rem;
			justify-content: end;
		}

		& button.ok {
			color-scheme: dark;
			--button-color: royalBlue;
			color: white;
		}

		& button.cancel {
			--button-color: var(--gray-3);
			outline-color: var(--gray-5);
		}

		& button {
			background-color: var(--button-color);
			padding: .4em .8em;
			border-radius: .2rem;

			&:focus-visible {
				outline: 2px solid var(--button-color);
				outline-offset: 2px;
			}	
		}
	}

	dialog.export {
		inline-size: min(100% - 6rem, 50rem);
		border-radius: .8rem;
		background-color: var(--transparent-gray-2);
		--backdrop-filter: blur(2rem);
		-webkit-backdrop-filter: var(--backdrop-filter);
		backdrop-filter: var(--backdrop-filter);
		box-shadow: 0 0 4rem var(--shadow-color);

		& > form {
			display: flex;
			flex-direction: column;
			gap: .6rem;
			padding: 1rem;
			container: ul / inline-size;

			& > ul {
				display: flex;

				& > li {
					flex-grow: 1;
					flex-shrink: 1;
					flex-basis: 0;
					position: relative;
					transition: background-color .1s;
					display: flex;
					flex-direction: inherit;
					align-items: stretch;

					&:not(:first-of-type)::before {
						content: "";
						background-color: var(--transparent-gray-3);
						flex-basis: 1px;
						transition: inherit;
					}

					:root.can-hover &:hover, &:active {
						background-color: var(--transparent-gray-2);
						border-radius: .5rem;

						:is(&, & + li)::before {
							background-color: transparent;
						}
					}

					& button {
						display: flex;
						flex-direction: column;
						gap: 1rem;
						align-items: center;
						block-size: 100%;
						padding: .6rem;
						inline-size: 100%;
						block-size: 100%;
						box-sizing: border-box;
						--icon-size: min(3rem, 80%);
				
						&::before {
							opacity: 80%;
						}
					}
				}
				
				@container ul (inline-size < 30rem) {
					flex-direction: column;
				}
			}
		}

		&::backdrop {
			background: none;
		}

		& h2 {
			font-weight: 500;
			font-size: 1.2rem;
		}


		& button.close {
			display: grid;
			place-content: center;
			float: right;
			float: inline-end;
			inline-size: 2rem;
			block-size: 2rem;
			border-radius: .3rem;
			transition: background-color .2s;

			:root.can-hover &:hover, &:active {
				background-color: var(--transparent-gray-3);
			}
		}
	}

	:root {
		--transition-direction: 1;
		/* transform-box: content-box; */
		/* position: relative; */
		/* margin-block-start: 3rem; */

		&:is([data-transition=toggling-view], [data-transition=changing-folder]) {
			&:is([data-view=editor], .transition-reverse) {
				--transition-direction: -1;
			}
		
			&::view-transition-group(*) {
				animation-duration: .2s;
				animation-timing-function: ease;
			}
		
			&::view-transition-old(main-content) {
				animation-name: fade-out;
			}
		
			&::view-transition-new(main-content) {
				animation-name: fade-in;
			}
			
		}

		&[data-transition="toggling-layout"] {
			& c-header {
				view-transition-name: header;
			}

			&::view-transition-group(*) {
				animation-duration: .3s;
				animation-timing-function: ease-in-out;
			}

			&::view-transition-image-pair(*) {
				inline-size: 100%;
				block-size: 100%;
				--halfway-size: 80%;
			}

			&::view-transition-image-pair(text-input),
			&::view-transition-image-pair(html-output) {
				inset: auto;
				animation-name: layout-toggle;
			}

			&::view-transition-image-pair(text-input) {
				inset-block-start: 0;
				inset-inline-start: 0;
			}
			
			&::view-transition-image-pair(html-output) {
				inset-block-end: 0;
				inset-inline-end: 0;

			}

			&::view-transition-old(*),
			&::view-transition-new(*) {
				inset: 0;
				inline-size: 100%;
				block-size: 100%;
			}
		}

		&[data-transition=theme-change] {
			view-transition-name: none;

			& body {
				view-transition-name: body;
				isolation: isolate;
			}

			&::view-transition-group(*) {
				animation-duration: .5s;
				animation-timing-function: ease-in;
			}

			&::view-transition {
				/* inset: 0; */
				/* inset-block-start: auto; */
				/* block-size: 90dvb; */
				/* inset-block-end: auto; */
				/* position: absolute; */
				/* height: 100dvh; */
				/* display: block; */
			}
			
			&::view-transition-group(root) {
				/* display: block; */
				/* width: 100%; */
				/* height: 100%; */
				/* width: auto; */
				/* height: auto; */
				/* inset: 0; */
				/* inset-block-end: auto; */
				/* transform: none; */
				/* position: absolute; */
				/* animation: none; */
				/* animation-name: none; */
			}
			
			&::view-transition-image-pair(root) {
				/* isolation: auto; */
				/* display: block; */
			}

			&::view-transition-old(body) {
				mix-blend-mode: normal;
				/* animation: none; */
				animation-name: none;
				/* display: block; */
				/* opacity: 1; */
				/* animation: none; */
			}

			&::view-transition-new(body) {
				mix-blend-mode: normal;
				animation-name: circular-portal;
				clip-path: circle(
					var(--circular-portal-radius) 
					at calc(var(--animation-origin-x) * 1px + env(safe-area-inset-left, 0px))
					calc(var(--animation-origin-y) * 1px + env(safe-area-inset-top, 0px))
				) content-box;
				/* animation: none; */
				/* opacity: 0; */
				/* display: block; */
			}
		}
	}

	@keyframes circular-portal {
		from {
			/* clip-path: circle(0px at calc(var(--animation-origin-x) * 1px) calc(var(--animation-origin-y) * 1px + (100lvb - 100dvb))) content-box; */
			/* clip-path: circle(0px at calc(var(--animation-origin-x) * 1px) calc(var(--animation-origin-y) * 1px)) content-box; */
			--circular-portal-radius: 0px;
		}
		to {
			/* clip-path: circle(hypot(100dvb, 100dvi) at calc(var(--animation-origin-x) * 1px) calc(var(--animation-origin-y) * 1px + (100lvb - 100dvb))) content-box; */
			/* clip-path: circle(hypot(100dvb, 100dvi) at calc(var(--animation-origin-x) * 1px) calc(var(--animation-origin-y) * 1px)) content-box; */
			--circular-portal-radius: hypot(100dvb, 100dvi);
		}
	}

	@keyframes layout-toggle {
		50% {
			inline-size: var(--halfway-size);
			block-size: var(--halfway-size);
		}
	}

	@keyframes fade-out {
		to {
			translate: calc(var(--transition-direction) * -1 * 20%) 0;
			opacity: 0%;
		}
	}

	@keyframes fade-in {
		from {
			translate: calc(var(--transition-direction) * 1 * 20%) 0;
			opacity: 0%;
		}
	}
}

@property --blur-radius {
	syntax: "<length>";
	inherits: true;
	initial-value: 0px;
}

@property --circular-portal-radius {
	syntax: "<length>";
	inherits: true;
	initial-value: 0px;
}

@view-transition {
	navigation: auto;
	types: page-navigation;
}

:root:active-view-transition-type(page-navigation)::view-transition-group(*) {
	/* animation-duration: 1s; */
}

@keyframes collapse {
	0% {
		padding-block-start: calc(var(--titlebar-area-block-start) + var(--titlebar-area-block-size));
		padding-inline: 0;
	}
	40% {
		padding-block-start: calc(var(--titlebar-area-block-start) + var(--titlebar-area-block-size));
	}
	60% {
		inline-size: 100dvi;
		padding-inline-start: var(--titlebar-area-inline-start);
		padding-inline-end: var(--titlebar-area-inline-end);
	}
	100% {
		padding-block-start: calc(var(--titlebar-area-block-start) + var(--padding));
		min-block-size: var(--titlebar-area-block-size);
	}
}

#dummy {
	inline-size: 1px;
	block-size: 1px;
	position: absolute;
}
